[
  {
    "model name" : "faceQuality",
    "march" : "BERNOULLI2",
    "op num" : 33687680,
    "param byte size" : 249600,
    "core num" : 1,
    "pe num" : 1,
    "hbdk-cc version" : "version: 3.12.1; runtime version: 3.9.1; cmake_build_type: relo3withdebinfowithassert; supported_march: bernoulli, bernoulli2, ; git_version: 6337dc8; git_branch: develop; release_type: public; ",
    "compiling options" : "--march bernoulli2 -m /gpfs/plat_aidi/model/3538/IntInference/quality_x2.0.5.json -p /gpfs/plat_aidi/model/3538/IntInference/quality_x2.0.5.params -s 1x128x128x3 -i pyramid --O2 --pyramid-stride 128 -o faceQuality.hbm",
    "model file" : "/gpfs/plat_aidi/model/3538/IntInference/quality_x2.0.5.json",
    "model file crc32" : 3976639050,
    "param file" : "/gpfs/plat_aidi/model/3538/IntInference/quality_x2.0.5.params",
    "param file crc32" : 3084705217,
    "input features" : [
      {
        "feature name" : "quanti_input_output",
        "feature id" : 0,
        "is constant" : false,
        "definer" : "OUTPUT_BY_UNKNOWN",
        "dynamic n index" : -1,
        "valid dim" : [1, 128, 128, 3],
        "aligned dim" : [1, 128, 128, 4],
        "padding size" : [0, 0, 0, 1],
        "element type name" : "int8",
        "element type id" : 1,
        "element type size" : 1,
        "big endian" : false,
        "little endian" : true,
        "is model input" : true,
        "input source" : "pyramid",
        "pyramid stride" : 128,
        "layout type name" : "NHCW_8W4C_S2D",
        "layout type id" : 15,
        "line RLE" : false,
        "HWC RLE" : false,
        "region type" : 1,
        "region name" : "input_regions",
        "offset in region" : 0,
        "occupied memory size" : 65536,
        "header size" : 0,
        "is quantized by scale" : false,
        "is quantized by shift" : true,
        "is quantized by nothing" : false,
        "is same shift" : true,
        "shift values" : [7, 7, 7]
      }
    ],
    "output features" : [
      {
        "feature name" : "pred_regress_conv_output",
        "feature id" : 1,
        "is constant" : false,
        "definer" : "OUTPUT_BY_CONV",
        "dynamic n index" : -1,
        "valid dim" : [1, 1, 1, 13],
        "aligned dim" : [1, 1, 1, 16],
        "padding size" : [0, 0, 0, 3],
        "element type name" : "int32",
        "element type id" : 3,
        "element type size" : 4,
        "big endian" : false,
        "little endian" : true,
        "is model input" : false,
        "layout type name" : "NHWC_NATIVE",
        "layout type id" : 0,
        "line RLE" : false,
        "HWC RLE" : false,
        "region type" : 2,
        "region name" : "output_regions",
        "offset in region" : 0,
        "occupied memory size" : 64,
        "header size" : 0,
        "is quantized by scale" : false,
        "is quantized by shift" : true,
        "is quantized by nothing" : false,
        "is same shift" : true,
        "shift values" : [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]
      },
      {
        "feature name" : "pred_class_conv_output",
        "feature id" : 2,
        "is constant" : false,
        "definer" : "OUTPUT_BY_CONV",
        "dynamic n index" : -1,
        "valid dim" : [1, 1, 1, 4],
        "aligned dim" : [1, 1, 1, 8],
        "padding size" : [0, 0, 0, 4],
        "element type name" : "int32",
        "element type id" : 3,
        "element type size" : 4,
        "big endian" : false,
        "little endian" : true,
        "is model input" : false,
        "layout type name" : "NHWC_NATIVE",
        "layout type id" : 0,
        "line RLE" : false,
        "HWC RLE" : false,
        "region type" : 2,
        "region name" : "output_regions",
        "offset in region" : 0,
        "occupied memory size" : 32,
        "header size" : 0,
        "is quantized by scale" : false,
        "is quantized by shift" : true,
        "is quantized by nothing" : false,
        "is same shift" : false,
        "shift values" : [12, 11, 11, 11]
      }
    ],
    "total output region size" : 96,
    "segment num" : 1
  }
]
